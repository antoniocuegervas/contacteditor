// ClientUI.js
(function(){
Type.registerNamespace('ClientUI.Model');ClientUI.Model.Contact=function(){ClientUI.Model.Contact.initializeBase(this,['contact']);}
ClientUI.Model.Contact.prototype={contactid:null,firstname:null,lastname:null,preferredcontactmethodcode:null,parentcustomerid:null,creditlimit:null}
Type.registerNamespace('ClientUI');ResourceStrings=function(){}
Type.registerNamespace('ClientUI.ViewModel');ClientUI.ViewModel.ContactsViewModel=function(parentCustomerId,pageSize){this.ErrorMessage=ko.observable();this.ParentCustomerId=ko.observable();ClientUI.ViewModel.ContactsViewModel.initializeBase(this);this.Contacts=new SparkleXrm.GridEditor.EntityDataViewModel(pageSize,ClientUI.Model.Contact,true);this.ParentCustomerId(parentCustomerId);var $0=new ClientUI.ViewModel.ObservableContact();$0.parentcustomerid(parentCustomerId);this.ContactEdit=ko.validatedObservable($0);this.ContactEdit().add_onSaveComplete(ss.Delegate.create(this,this.$1_3));this.Contacts.onDataLoaded.subscribe(ss.Delegate.create(this,this.$1_0));ClientUI.ViewModel.ObservableContact.registerValidation(this.Contacts.validationBinder);this.AllowAddNew=ko.dependentObservable(ss.Delegate.create(this,this.allowAddNewComputed));this.AllowOpen=ko.observable(false);this.Contacts.add_onSelectedRowsChanged(ss.Delegate.create(this,this.$1_1));}
ClientUI.ViewModel.ContactsViewModel.prototype={ContactEdit:null,AllowAddNew:null,AllowOpen:null,Contacts:null,$1_0:function($p0,$p1){var $0=$p1;for(var $1=0;$1<$0.to;$1++){var $2=this.Contacts.getItem($1);if($2==null){return;}$2.add_propertyChanged(ss.Delegate.create(this,this.$1_2));}},$1_1:function(){var $0=SparkleXrm.GridEditor.DataViewBase.rangesToRows(this.Contacts.getSelectedRows());if($0.length===1){this.AllowOpen(true);}else{this.AllowOpen(false);}},$1_2:function($p0,$p1){var $0=$p0;var $1=new ClientUI.Model.Contact();$1.contactid=new Xrm.Sdk.Guid($0.id);var $2=false;switch($p1.propertyName){case 'firstname':$1.firstname=$0.firstname;$2=true;break;case 'lastname':$1.lastname=$0.lastname;$2=true;break;case 'preferredcontactmethodcode':$1.preferredcontactmethodcode=$0.preferredcontactmethodcode;$2=true;break;case 'creditlimit':$1.creditlimit=$0.creditlimit;$2=true;break;}if($2){Xrm.Sdk.OrganizationServiceProxy.beginUpdate($1,ss.Delegate.create(this,function($p1_0){
try{Xrm.Sdk.OrganizationServiceProxy.endUpdate($p1_0);this.ErrorMessage(null);}catch($1_0){this.ErrorMessage($1_0.message);}}));}},$1_3:function($p0){if($p0==null){this.Contacts.reset();this.Contacts.refresh();}this.ErrorMessage($p0);},search:function(){var $0=this.ParentCustomerId().id.toString().replaceAll('{','').replaceAll('}','');this.Contacts.set_fetchXml("<fetch version='1.0' output-format='xml-platform' mapping='logical' returntotalrecordcount='true' no-lock='true' distinct='false' count='{0}' paging-cookie='{1}' page='{2}'>\r\n  <entity name='contact'>\r\n    <attribute name='firstname' />\r\n    <attribute name='lastname' />\r\n    <attribute name='preferredcontactmethodcode' />\r\n    <attribute name='creditlimit' />\r\n    <attribute name='contactid' />\n    <filter type='and'>\n        <condition attribute='parentcustomerid' operator='eq' value='"+$0+"' />\n    </filter>\n    {3}\r\n  </entity>\r\n</fetch>");this.Contacts.refresh();},$1_4:function($p0){var $0=[];var $enum1=ss.IEnumerator.getEnumerator($p0);while($enum1.moveNext()){var $1=$enum1.current;$0.add(this.Contacts.getItem($1));}try{var $enum2=ss.IEnumerator.getEnumerator($0);while($enum2.moveNext()){var $2=$enum2.current;Xrm.Sdk.OrganizationServiceProxy.delete_($2.logicalName,new Xrm.Sdk.Guid($2.id));}}catch($3){this.ErrorMessage($3.toString());}this.Contacts.raiseOnSelectedRowsChanged(null);this.Contacts.reset();this.Contacts.refresh();},AddNewCommand:function(){this.ContactEdit().parentcustomerid(this.ParentCustomerId());this.ErrorMessage(null);this.ContactEdit().AddNewVisible(true);},DeleteSelectedCommand:function(){var $0=SparkleXrm.GridEditor.DataViewBase.rangesToRows(this.Contacts.getSelectedRows());if(!$0.length){return;}Xrm.Utility.confirmDialog(String.format(ResourceStrings.ConfirmDeleteSelectedConnection,$0.length),ss.Delegate.create(this,function(){
this.$1_4($0);}),null);},OpenSelectedRecordCommand:function(){var $0=SparkleXrm.GridEditor.DataViewBase.rangesToRows(this.Contacts.getSelectedRows());if($0.length!==1){return;}var $1=[];var $enum1=ss.IEnumerator.getEnumerator($0);while($enum1.moveNext()){var $2=$enum1.current;$1.add(this.Contacts.getItem($2));}try{var $enum2=ss.IEnumerator.getEnumerator($1);while($enum2.moveNext()){var $3=$enum2.current;Xrm.Utility.openEntityForm($3.logicalName,$3.id,null);}}catch($4){this.ErrorMessage($4.toString());}},allowAddNewComputed:function(){var $0=this.ParentCustomerId();return $0!=null&&$0.id!=null&&$0.id.value!=null&&$0.id.value.length>0;}}
ClientUI.ViewModel.ObservableContact=function(){this.AddNewVisible=ko.observable(false);this.contactid=ko.observable();this.firstname=ko.observable();this.lastname=ko.observable();this.preferredcontactmethodcode=ko.observable();this.parentcustomerid=ko.observable();this.creditlimit=ko.observable();ClientUI.ViewModel.ObservableContact.initializeBase(this);ClientUI.ViewModel.ObservableContact.registerValidation(new SparkleXrm.ObservableValidationBinder(this));}
ClientUI.ViewModel.ObservableContact.registerValidation=function(binder){binder.register('lastname',ClientUI.ViewModel.ObservableContact.$1_1);}
ClientUI.ViewModel.ObservableContact.$1_1=function($p0,$p1,$p2){return $p0.addRule(ResourceStrings.RequiredMessage,function($p1_0){
return !String.isNullOrEmpty($p1_0);});}
ClientUI.ViewModel.ObservableContact.prototype={add_onSaveComplete:function(value){this.$1_0=ss.Delegate.combine(this.$1_0,value);},remove_onSaveComplete:function(value){this.$1_0=ss.Delegate.remove(this.$1_0,value);},$1_0:null,SaveCommand:function(){var $0=(this).isValid();if(!$0){(this).errors.showAllMessages(true);return;}this.isBusy(true);this.AddNewVisible(false);var $1=new ClientUI.Model.Contact();$1.firstname=this.firstname();$1.lastname=this.lastname();$1.parentcustomerid=this.parentcustomerid();$1.preferredcontactmethodcode=this.preferredcontactmethodcode();$1.creditlimit=this.creditlimit();Xrm.Sdk.OrganizationServiceProxy.beginCreate($1,ss.Delegate.create(this,function($p1_0){
try{this.contactid(Xrm.Sdk.OrganizationServiceProxy.endCreate($p1_0));this.$1_0(null);this.firstname(null);this.lastname(null);this.preferredcontactmethodcode(null);this.creditlimit(null);(this).errors.showAllMessages(false);}catch($1_0){this.$1_0($1_0.message);}finally{this.isBusy(false);}}));},CancelCommand:function(){this.AddNewVisible(false);}}
Type.registerNamespace('ClientUI.View');ClientUI.View.ContactsView=function(){}
ClientUI.View.ContactsView.Init=function(){Xrm.PageEx.majorVersion=2013;var $0=Xrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid;SparkleXrm.LocalisedContentLoader.fallBackLCID=0;SparkleXrm.LocalisedContentLoader.supportedLCIDs.add(3082);SparkleXrm.LocalisedContentLoader.supportedLCIDs.add(1033);SparkleXrm.LocalisedContentLoader.loadContent('ced1_/js/Res.metadata.js',$0,function(){
ClientUI.View.ContactsView.$1();});}
ClientUI.View.ContactsView.$1=function(){var $0;var $1;var $2;var $3=10;$0=Xrm.PageEx.getWebResourceData();$1=window.parent.Xrm.Page.data.entity.getId();$2=window.parent.Xrm.Page.data.entity.getEntityName();window.parent.Xrm.Page.data.entity.addOnSave(ClientUI.View.ContactsView.$2);var $4=new Xrm.Sdk.EntityReference(new Xrm.Sdk.Guid($1),$2,null);$(window).resize(ClientUI.View.ContactsView.$3);ClientUI.View.ContactsView.vm=new ClientUI.ViewModel.ContactsViewModel($4,$3);var $5=new SparkleXrm.GridEditor.GridDataViewBinder();var $6=SparkleXrm.GridEditor.GridDataViewBinder.parseLayout(ResourceStrings.LastName+',lastname,200,'+ResourceStrings.FirstName+',firstname,200,'+ResourceStrings.PreferredContactMethodCode+',preferredcontactmethodcode,120,'+ResourceStrings.CreditLimit+',creditlimit,120');ClientUI.View.ContactsView.$0=$5.dataBindXrmGrid(ClientUI.View.ContactsView.vm.Contacts,$6,'container','pager',true,false);var $enum1=ss.IEnumerator.getEnumerator($6);while($enum1.moveNext()){var $7=$enum1.current;switch($7.field){case 'preferredcontactmethodcode':SparkleXrm.GridEditor.XrmOptionSetEditor.bindColumn($7,'contact','preferredcontactmethodcode',true);break;case 'firstname':case 'lastname':SparkleXrm.GridEditor.XrmTextEditor.bindColumn($7);break;case 'creditlimit':SparkleXrm.GridEditor.XrmMoneyEditor.bindColumn($7,0,1000000000);break;}}SparkleXrm.ViewBase.registerViewModel(ClientUI.View.ContactsView.vm);ClientUI.View.ContactsView.$3(null);$(function(){
ClientUI.View.ContactsView.vm.search();});}
ClientUI.View.ContactsView.$2=function(){var $0=new Xrm.Sdk.EntityReference(new Xrm.Sdk.Guid(window.parent.Xrm.Page.data.entity.getId()),window.parent.Xrm.Page.data.entity.getEntityName(),null);if(window.parent.Xrm.Page.ui.getFormType()!==10*.1&&$0.id!=null){ClientUI.View.ContactsView.vm.ParentCustomerId($0);ClientUI.View.ContactsView.vm.search();}else{window.setTimeout(ClientUI.View.ContactsView.$2,1000);}}
ClientUI.View.ContactsView.$3=function($p0){var $0=$(window).height();var $1=$(window).width();$('#container').height($0-64).width($1-2);if(ClientUI.View.ContactsView.$0!=null){ClientUI.View.ContactsView.$0.resizeCanvas();}}
ClientUI.Model.Contact.registerClass('ClientUI.Model.Contact',Xrm.Sdk.Entity);ResourceStrings.registerClass('ResourceStrings');ClientUI.ViewModel.ContactsViewModel.registerClass('ClientUI.ViewModel.ContactsViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.ObservableContact.registerClass('ClientUI.ViewModel.ObservableContact',SparkleXrm.ViewModelBase);ClientUI.View.ContactsView.registerClass('ClientUI.View.ContactsView');ResourceStrings.RequiredMessage=null;ResourceStrings.SaveButton=null;ResourceStrings.CancelButton=null;ResourceStrings.Contact_CollectionName=null;ResourceStrings.FirstName=null;ResourceStrings.LastName=null;ResourceStrings.PreferredContactMethodCode=null;ResourceStrings.CreditLimit=null;ResourceStrings.ConfirmDeleteSelectedConnection=null;ClientUI.View.ContactsView.vm=null;ClientUI.View.ContactsView.$0=null;})();// This script was generated using Script# v0.7.4.0
